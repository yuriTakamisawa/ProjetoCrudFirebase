/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import { Duplex } from 'stream';
import { Socket, SocketConnectOpts } from 'net';
import { RequireOnlyOne } from './util';
declare const DEFAULT_TIMEOUT = 30000;
declare type SocksProxyType = 4 | 5;
declare const ERRORS: {
    InvalidSocksCommand: string;
    InvalidSocksCommandForOperation: string;
    InvalidSocksCommandChain: string;
    InvalidSocksClientOptionsDestination: string;
    InvalidSocksClientOptionsExistingSocket: string;
    InvalidSocksClientOptionsProxy: string;
    InvalidSocksClientOptionsTimeout: string;
    InvalidSocksClientOptionsProxiesLength: string;
    InvalidSocksClientOptionsCustomAuthRange: string;
    InvalidSocksClientOptionsCustomAuthOptions: string;
    NegotiationError: string;
    SocketClosed: string;
    ProxyConnectionTimedOut: string;
    InternalError: string;
    InvalidSocks4HandshakeResponse: string;
    Socks4ProxyRejectedConnection: string;
    InvalidSocks4IncomingConnectionResponse: string;
    Socks4ProxyRejectedIncomingBoundConnection: string;
    InvalidSocks5InitialHandshakeResponse: string;
    InvalidSocks5IntiailHandshakeSocksVersion: string;
    InvalidSocks5InitialHandshakeNoAcceptedAuthType: string;
    InvalidSocks5InitialHandshakeUnknownAuthType: string;
    Socks5AuthenticationFailed: string;
    InvalidSocks5FinalHandshake: string;
    InvalidSocks5FinalHandshakeRejected: string;
    InvalidSocks5IncomingConnectionResponse: string;
    Socks5ProxyRejectedIncomingBoundConnection: string;
};
declare const SOCKS_INCOMING_PACKET_SIZES: {
    Socks5InitialHandshakeResponse: number;
    Socks5UserPassAuthenticationResponse: number;
    Socks5ResponseHeader: number;
    Socks5ResponseIPv4: number;
    Socks5ResponseIPv6: number;
    Socks5ResponseHostname: (hostNameLength: number) => number;
    Socks4Response: number;
};
declare type SocksCommandOption = 'connect' | 'bind' | 'associate';
declare enum SocksCommand {
    connect = 1,
    bind = 2,
    associate = 3
}
declare enum Socks4Response {
    Granted = 90,
    Failed = 91,
    Rejected = 92,
    RejectedIdent = 93
}
declare enum Socks5Auth {
    NoAuth = 0,
    GSSApi = 1,
    UserPass = 2
}
declare const SOCKS5_CUSTOM_AUTH_START = 128;
declare const SOCKS5_CUSTOM_AUTH_END = 254;
declare const SOCKS5_NO_ACCEPTABLE_AUTH = 255;
declare enum Socks5Response {
    Granted = 0,
    Failure = 1,
    NotAllowed = 2,
    